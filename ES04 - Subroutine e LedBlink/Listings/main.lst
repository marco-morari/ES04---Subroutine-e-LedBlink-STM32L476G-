


ARM Macro Assembler    Page 1 


    1 00000000         ;=======================================================
                       ===================================
    2 00000000         ; Project:  ES04 - Subroutine e LedBlink (STM32L476G)
    3 00000000         ; Date:     05/05/22
    4 00000000         ; Author:   Marco Morari
    5 00000000         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    6 00000000         ;
    7 00000000         ;  <inserire una breve descrizione del progetto>
    8 00000000         ;
    9 00000000         ;  <specifiche del progetto>
   10 00000000         ;  <specifiche del collaudo>
   11 00000000         ;
   12 00000000         ; Ver   Date        Comment
   13 00000000         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   14 00000000         ; 1.0  05/05/22     Versione iniziale
   15 00000000         ; <Descrivere per ogni revisione o cambio di versione le
                        modifiche apportate>
   16 00000000         ;
   17 00000000         ;=======================================================
                       ===================================
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ;-------------------------------------------------------
                       -----------------------------------
   21 00000000         ;=== COSTANTI ==========================================
                       ===================================
   22 00000000         ;-------------------------------------------------------
                       -----------------------------------
   23 00000000 48000400 
                       GPIOB_MODER
                               EQU              0x48000400
   24 00000000 48000414 
                       GPIOB_ODR
                               EQU              0x48000414
   25 00000000 48001000 
                       GPIOE_MODER
                               EQU              0x48001000
   26 00000000 48001014 
                       GPIOE_ODR
                               EQU              0x48001014
   27 00000000 4002104C 
                       RCC_CR_AHB2
                               EQU              0X4002104C
   28 00000000         
   29 00000000 00000001 
                       PB2_PORT_AHB2_BIT
                               EQU              0x1
   30 00000000 00000005 
                       PB2_MODERH_BIT
                               EQU              0x5
   31 00000000 00000004 
                       PB2_MODERL_BIT
                               EQU              0x4
   32 00000000 00000002 
                       PB2_ODR_BIT
                               EQU              0x2
   33 00000000         



ARM Macro Assembler    Page 2 


   34 00000000 00000004 
                       PE8_PORT_AHB2_BIT
                               EQU              0x4
   35 00000000 00000011 
                       PE8_MODERH_BIT
                               EQU              0x11        ;=17
   36 00000000 00000010 
                       PE8_MODERL_BIT
                               EQU              0x10        ;=16
   37 00000000 00000008 
                       PE8_ODR_BIT
                               EQU              0x8
   38 00000000         
   39 00000000         ;-------------------------------------------------------
                       -----------------------------------
   40 00000000         ;=== AREA ISTRUZIONI ===================================
                       ===================================
   41 00000000         ;-------------------------------------------------------
                       -----------------------------------
   42 00000000                 AREA             MyCode, CODE, READONLY
   43 00000000                 ALIGN
   44 00000000         ;------------------
   45 00000000         ; EXPORT/IMPORT
   46 00000000         ;------------------
   47 00000000                 EXPORT           __main
   48 00000000                 ENTRY
   49 00000000         
   50 00000000         ;-------------------------------------------------------
                       -----------------------------------
   51 00000000         ;=== MAIN ROUTINE ======================================
                       ===================================
   52 00000000         ;-------------------------------------------------------
                       -----------------------------------
   53 00000000         __main
   54 00000000         ; Inizializzazioni
   55 00000000 F000 F81D       BL               LedRossoInit
   56 00000004 F000 F82B       BL               LedVerdeInit
   57 00000008         
   58 00000008         ; Loop infinito
   59 00000008         MainLoop
   60 00000008 F44F 70FA       MOV              R0,#500
   61 0000000C F000 F801       BL               LedTest
   62 00000010 E7FA            B                MainLoop
   63 00000012         
   64 00000012         ;-------------------------------------------------------
                       -----------------------------------
   65 00000012         ;=== SUB ROUTINE =======================================
                       ===================================
   66 00000012         ;-------------------------------------------------------
                       -----------------------------------
   67 00000012         ;-------------------------------------------------------
                       ----------------------------------
   68 00000012         ; Elenco delle sub routine da chiamare per eseguire il p
                       rogramma
   69 00000012         ;  INPUT:  none
   70 00000012         ;  OUTPUT: none
   71 00000012         ;  AUTORE: Marco Morari
   72 00000012         ;  05/05/22  1.0  Versione iniziale
   73 00000012         ;-------------------------------------------------------



ARM Macro Assembler    Page 3 


                       ----------------------------------
   74 00000012         LedTest
   75 00000012         ;in questa subroutine dovranno essere richiamate tutte l
                       e subroutine
   76 00000012 B500            PUSH{LR}
   77 00000014 F000 F833       BL               LedRossoON
   78 00000018 F000 F83A       BL               LedVerdeON
   79 0000001C F000 F865       BL               DelayMs
   80 00000020 F000 F83F       BL               LedRossoOFF
   81 00000024 F000 F846       BL               LedVerdeOFF
   82 00000028 F000 F85F       BL               DelayMs
   83 0000002C F000 F84B       BL               LedRossoToggle
   84 00000030 F000 F852       BL               LedVerdeToggle
   85 00000034 F000 F859       BL               DelayMs
   86 00000038 F85D EB04       POP{LR}
   87 0000003C 4770            BX               LR
   88 0000003E         ;-------------------------------------------------------
                       ----------------------------------
   89 0000003E         ; Configurazione del pin dove è collegato il led rosso c
                       ome output digitale
   90 0000003E         ;  INPUT:  none
   91 0000003E         ;  OUTPUT: none
   92 0000003E         ;  AUTORE: Marco Morari
   93 0000003E         ;  05/05/22  1.0  Versione iniziale
   94 0000003E         ;-------------------------------------------------------
                       ----------------------------------
   95 0000003E         LedRossoInit
   96 0000003E B503            PUSH{LR,         R0, R1}
   97 00000040 4831            LDR              R0,=RCC_CR_AHB2
   98 00000042 6801            LDR              R1,[R0]
   99 00000044 F041 0102       ORR              R1,#1<<PB2_PORT_AHB2_BIT
  100 00000048 6001            STR              R1,[R0]
  101 0000004A 4830            LDR              R0,=GPIOB_MODER
  102 0000004C 6801            LDR              R1,[R0]
  103 0000004E F021 0120       BIC              R1,#1<<PB2_MODERH_BIT
  104 00000052 F041 0110       ORR              R1,#1<<PB2_MODERL_BIT
  105 00000056 6001            STR              R1,[R0]
  106 00000058 E8BD 4003       POP{LR,          R0, R1}
  107 0000005C 4770            BX               LR
  108 0000005E         
  109 0000005E         ;-------------------------------------------------------
                       ----------------------------------
  110 0000005E         ; Configurazione del pin dove è collegato il led verde c
                       ome output digitale
  111 0000005E         ;  INPUT:  none
  112 0000005E         ;  OUTPUT: none
  113 0000005E         ;  AUTORE: Marco Morari
  114 0000005E         ;  05/05/22  1.0  Versione iniziale
  115 0000005E         ;-------------------------------------------------------
                       ----------------------------------
  116 0000005E         LedVerdeInit
  117 0000005E B503            PUSH{LR,         R0,R1}
  118 00000060 4829            LDR              R0,=RCC_CR_AHB2
  119 00000062 6801            LDR              R1,[R0]
  120 00000064 F041 0110       ORR              R1,#1<<PE8_PORT_AHB2_BIT
  121 00000068 6001            STR              R1,[R0]
  122 0000006A 4829            LDR              R0,=GPIOE_MODER
  123 0000006C 6801            LDR              R1,[R0]
  124 0000006E F421 3100       BIC              R1,#1<<PE8_MODERH_BIT



ARM Macro Assembler    Page 4 


  125 00000072 F441 3180       ORR              R1,#1<<PE8_MODERL_BIT
  126 00000076 6001            STR              R1,[R0]
  127 00000078 E8BD 4003       POP{LR,          R0, R1}
  128 0000007C 4770            BX               LR
  129 0000007E         
  130 0000007E         ;-------------------------------------------------------
                       ----------------------------------
  131 0000007E         ; Accensione led rosso
  132 0000007E         ;  INPUT:  none
  133 0000007E         ;  OUTPUT: none
  134 0000007E         ;  AUTORE: Marco Morari
  135 0000007E         ;  05/05/22  1.0  Versione iniziale
  136 0000007E         ;-------------------------------------------------------
                       ----------------------------------
  137 0000007E         LedRossoON
  138 0000007E B503            PUSH{LR,         R0, R1}
  139 00000080 4824            LDR              R0,=GPIOB_ODR
  140 00000082 6801            LDR              R1, [R0]
  141 00000084 F041 0104       ORR              R1, #1<<PB2_ODR_BIT
  142 00000088 6001            STR              R1, [R0]
  143 0000008A E8BD 4003       POP{LR,          R0, R1}
  144 0000008E 4770            BX               LR
  145 00000090         
  146 00000090         ;-------------------------------------------------------
                       ----------------------------------
  147 00000090         ; Accensione led verde
  148 00000090         ;  INPUT:  none
  149 00000090         ;  OUTPUT: none
  150 00000090         ;  AUTORE: Marco Morari
  151 00000090         ;  05/05/22  1.0  Versione iniziale
  152 00000090         ;-------------------------------------------------------
                       ----------------------------------
  153 00000090         LedVerdeON
  154 00000090 B503            PUSH{LR,         R0, R1}
  155 00000092 4821            LDR              R0,=GPIOE_ODR
  156 00000094 6801            LDR              R1, [R0]
  157 00000096 F441 7180       ORR              R1, #1<<PE8_ODR_BIT
  158 0000009A 6001            STR              R1, [R0]
  159 0000009C E8BD 4003       POP{LR,          R0, R1}
  160 000000A0 4770            BX               LR
  161 000000A2         
  162 000000A2         ;-------------------------------------------------------
                       ----------------------------------
  163 000000A2         ; Spegnimento led rosso
  164 000000A2         ;  INPUT:  none
  165 000000A2         ;  OUTPUT: none
  166 000000A2         ;  AUTORE: Marco Morari
  167 000000A2         ;  05/05/22  1.0  Versione iniziale
  168 000000A2         ;-------------------------------------------------------
                       ----------------------------------
  169 000000A2         LedRossoOFF
  170 000000A2 B503            PUSH{LR,         R0, R1}
  171 000000A4 481B            LDR              R0,=GPIOB_ODR
  172 000000A6 6801            LDR              R1, [R0]
  173 000000A8 F021 0104       BIC              R1, #1<<PB2_ODR_BIT
  174 000000AC 6001            STR              R1, [R0]
  175 000000AE E8BD 4003       POP{LR,          R0, R1}
  176 000000B2 4770            BX               LR
  177 000000B4         



ARM Macro Assembler    Page 5 


  178 000000B4         ;-------------------------------------------------------
                       ----------------------------------
  179 000000B4         ; Spegnimento led verde
  180 000000B4         ;  INPUT:  none
  181 000000B4         ;  OUTPUT: none
  182 000000B4         ;  AUTORE: Marco Morari
  183 000000B4         ;  05/05/22  1.0  Versione iniziale
  184 000000B4         ;-------------------------------------------------------
                       ----------------------------------
  185 000000B4         LedVerdeOFF
  186 000000B4 B503            PUSH{LR,         R0, R1}
  187 000000B6 4818            LDR              R0,=GPIOE_ODR
  188 000000B8 6801            LDR              R1, [R0]
  189 000000BA F421 7180       BIC              R1, #1<<PE8_ODR_BIT
  190 000000BE 6001            STR              R1, [R0]
  191 000000C0 E8BD 4003       POP{LR,          R0, R1}
  192 000000C4 4770            BX               LR
  193 000000C6         
  194 000000C6         ;-------------------------------------------------------
                       ----------------------------------
  195 000000C6         ; LedToggle - Exor con 1 del bit corrispondente al pin d
                       ove è collegato il LED rosso
  196 000000C6         ;  INPUT:  none
  197 000000C6         ;  OUTPUT: none
  198 000000C6         ;  AUTORE: Marco Morari
  199 000000C6         ;  05/05/22  1.0  Versione iniziale
  200 000000C6         ;-------------------------------------------------------
                       ----------------------------------
  201 000000C6         LedRossoToggle
  202 000000C6 B503            PUSH{LR,         R0, R1}
  203 000000C8 4812            LDR              R0,=GPIOB_ODR
  204 000000CA 6801            LDR              R1,[R0]
  205 000000CC F081 0104       EOR              R1,#1<<PB2_ODR_BIT
  206 000000D0 6001            STR              R1,[R0]
  207 000000D2 E8BD 4003       POP              {LR, R0, R1}
  208 000000D6 4770            BX               LR
  209 000000D8         
  210 000000D8         ;-------------------------------------------------------
                       ----------------------------------
  211 000000D8         ; LedToggle - Exor con 1 del bit corrispondente al pin d
                       ove è collegato il LED verde
  212 000000D8         ;  INPUT:  none
  213 000000D8         ;  OUTPUT: none
  214 000000D8         ;  AUTORE: Marco Morari
  215 000000D8         ;  05/05/22  1.0  Versione iniziale
  216 000000D8         ;-------------------------------------------------------
                       ----------------------------------
  217 000000D8         LedVerdeToggle
  218 000000D8 B503            PUSH{LR,         R0, R1}
  219 000000DA 480F            LDR              R0,=GPIOE_ODR
  220 000000DC 6801            LDR              R1,[R0]
  221 000000DE F481 7180       EOR              R1,#1<<PE8_ODR_BIT
  222 000000E2 6001            STR              R1,[R0]
  223 000000E4 E8BD 4003       POP              {LR, R0, R1}
  224 000000E8 4770            BX               LR
  225 000000EA         
  226 000000EA         ;-------------------------------------------------------
                       ----------------------------------
  227 000000EA         ; Esegue R0 volte il ritardo di 1ms. (+1,75us)



ARM Macro Assembler    Page 6 


  228 000000EA         ; A 4Mhz ogni istruzione viene esguita in 250ns = 1/4Mhz
                       
  229 000000EA         ; Il ciclo DelayMs_1ms è composto da 5 x nCICLI istruzio
                       ni.
  230 000000EA         ; Quindi 5*nCICLI*250ns = 1ms -> nCICLI = 1.000.000/5/25
                       0 = 800
  231 000000EA         ;  INPUT:  R0 -> Ritardo in millisecondi
  232 000000EA         ;  OUTPUT: none
  233 000000EA         ;  AUTORE: Marco Morari
  234 000000EA         ;  05/05/22  1.0  Versione iniziale
  235 000000EA         ;-------------------------------------------------------
                       ---------------------------------- 
  236 000000EA         DelayMs
  237 000000EA B507            PUSH             {R0-R2, LR} ;1 
  238 000000EC F44F 7248       MOV              R2,#800     ;2 - nCICLI da eseg
                                                            uire per ogni ms
  239 000000F0 FB00 F002       MUL              R0,R0,R2    ;3 - converto i mil
                                                            lisecondi in num ci
                                                            cli
  240 000000F4 F04F 0100       MOV              R1,#0x0     ;4 - i=0
  241 000000F8         DelayMs_1ms
  242 000000F8 4288            CMP              R0,R1       ;n1 - Comparo il va
                                                            lore del registro r
                                                            2 con r1
  243 000000FA D002            BEQ              DelayMs_end ;n2 - Se è uguale s
                                                            alto a end
  244 000000FC F101 0101       ADD              R1,#0x1     ;n3 - Incremento la
                                                             i 
  245 00000100 E7FA            B                DelayMs_1ms ;n4,n5 - Salto a In
                                                            izio (consuma due c
                                                            icli istruzione)
  246 00000102         DelayMs_end
  247 00000102 E8BD 4007       POP              {R0-R2, LR} ;5
  248 00000106 4770            BX               LR          ;6,7
  249 00000108         
  250 00000108         ;-------------------------------------------------------
                       -----------------------------------
  251 00000108                 ALIGN
  252 00000108                 END
              4002104C 
              48000400 
              48001000 
              48000414 
              48001014 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --depen
d=.\objects\main.d -o.\objects\main.o -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\
2.6.1\Drivers\CMSIS\Device\ST\STM32L4xx\Include --predefine="__EVAL SETA 1" --p
redefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefi
ne="STM32L476xx SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DelayMs 000000EA

Symbol: DelayMs
   Definitions
      At line 236 in file main.s
   Uses
      At line 79 in file main.s
      At line 82 in file main.s
      At line 85 in file main.s

DelayMs_1ms 000000F8

Symbol: DelayMs_1ms
   Definitions
      At line 241 in file main.s
   Uses
      At line 245 in file main.s
Comment: DelayMs_1ms used once
DelayMs_end 00000102

Symbol: DelayMs_end
   Definitions
      At line 246 in file main.s
   Uses
      At line 243 in file main.s
Comment: DelayMs_end used once
LedRossoInit 0000003E

Symbol: LedRossoInit
   Definitions
      At line 95 in file main.s
   Uses
      At line 55 in file main.s
Comment: LedRossoInit used once
LedRossoOFF 000000A2

Symbol: LedRossoOFF
   Definitions
      At line 169 in file main.s
   Uses
      At line 80 in file main.s
Comment: LedRossoOFF used once
LedRossoON 0000007E

Symbol: LedRossoON
   Definitions
      At line 137 in file main.s
   Uses
      At line 77 in file main.s
Comment: LedRossoON used once
LedRossoToggle 000000C6

Symbol: LedRossoToggle
   Definitions
      At line 201 in file main.s
   Uses
      At line 83 in file main.s
Comment: LedRossoToggle used once
LedTest 00000012



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: LedTest
   Definitions
      At line 74 in file main.s
   Uses
      At line 61 in file main.s
Comment: LedTest used once
LedVerdeInit 0000005E

Symbol: LedVerdeInit
   Definitions
      At line 116 in file main.s
   Uses
      At line 56 in file main.s
Comment: LedVerdeInit used once
LedVerdeOFF 000000B4

Symbol: LedVerdeOFF
   Definitions
      At line 185 in file main.s
   Uses
      At line 81 in file main.s
Comment: LedVerdeOFF used once
LedVerdeON 00000090

Symbol: LedVerdeON
   Definitions
      At line 153 in file main.s
   Uses
      At line 78 in file main.s
Comment: LedVerdeON used once
LedVerdeToggle 000000D8

Symbol: LedVerdeToggle
   Definitions
      At line 217 in file main.s
   Uses
      At line 84 in file main.s
Comment: LedVerdeToggle used once
MainLoop 00000008

Symbol: MainLoop
   Definitions
      At line 59 in file main.s
   Uses
      At line 62 in file main.s
Comment: MainLoop used once
MyCode 00000000

Symbol: MyCode
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: MyCode unused
__main 00000000

Symbol: __main
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 53 in file main.s
   Uses
      At line 47 in file main.s
Comment: __main used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOB_MODER 48000400

Symbol: GPIOB_MODER
   Definitions
      At line 23 in file main.s
   Uses
      At line 101 in file main.s
Comment: GPIOB_MODER used once
GPIOB_ODR 48000414

Symbol: GPIOB_ODR
   Definitions
      At line 24 in file main.s
   Uses
      At line 139 in file main.s
      At line 171 in file main.s
      At line 203 in file main.s

GPIOE_MODER 48001000

Symbol: GPIOE_MODER
   Definitions
      At line 25 in file main.s
   Uses
      At line 122 in file main.s
Comment: GPIOE_MODER used once
GPIOE_ODR 48001014

Symbol: GPIOE_ODR
   Definitions
      At line 26 in file main.s
   Uses
      At line 155 in file main.s
      At line 187 in file main.s
      At line 219 in file main.s

PB2_MODERH_BIT 00000005

Symbol: PB2_MODERH_BIT
   Definitions
      At line 30 in file main.s
   Uses
      At line 103 in file main.s
Comment: PB2_MODERH_BIT used once
PB2_MODERL_BIT 00000004

Symbol: PB2_MODERL_BIT
   Definitions
      At line 31 in file main.s
   Uses
      At line 104 in file main.s
Comment: PB2_MODERL_BIT used once
PB2_ODR_BIT 00000002

Symbol: PB2_ODR_BIT
   Definitions
      At line 32 in file main.s
   Uses
      At line 141 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 173 in file main.s
      At line 205 in file main.s

PB2_PORT_AHB2_BIT 00000001

Symbol: PB2_PORT_AHB2_BIT
   Definitions
      At line 29 in file main.s
   Uses
      At line 99 in file main.s
Comment: PB2_PORT_AHB2_BIT used once
PE8_MODERH_BIT 00000011

Symbol: PE8_MODERH_BIT
   Definitions
      At line 35 in file main.s
   Uses
      At line 124 in file main.s
Comment: PE8_MODERH_BIT used once
PE8_MODERL_BIT 00000010

Symbol: PE8_MODERL_BIT
   Definitions
      At line 36 in file main.s
   Uses
      At line 125 in file main.s
Comment: PE8_MODERL_BIT used once
PE8_ODR_BIT 00000008

Symbol: PE8_ODR_BIT
   Definitions
      At line 37 in file main.s
   Uses
      At line 157 in file main.s
      At line 189 in file main.s
      At line 221 in file main.s

PE8_PORT_AHB2_BIT 00000004

Symbol: PE8_PORT_AHB2_BIT
   Definitions
      At line 34 in file main.s
   Uses
      At line 120 in file main.s
Comment: PE8_PORT_AHB2_BIT used once
RCC_CR_AHB2 4002104C

Symbol: RCC_CR_AHB2
   Definitions
      At line 27 in file main.s
   Uses
      At line 97 in file main.s
      At line 118 in file main.s

13 symbols
365 symbols in table
